Find the Web site address using Socket programming

import java.net.*;
import java.util.*;
public class IPFinder
{
public static void main(String[] args)
{
String host;
Scanner input = new Scanner(System.in);
System.out.print("\n\nEnter host name: ");
host = input.next();
try
{
InetAddress address = InetAddress.getByName(host);
System.out.println("IP address: " + address.toString());
}
catch (UnknownHostException uhEx)
{
System.out.println("Could not find " + host);
}
}
}
---------------------------------------------------------
Find the local host IP address using Socket programming

import java.net.*;
public class MyLocalIPAddress
{
public static void main(String[] args)
{
try
{
InetAddress address =InetAddress.getLocalHost();
System.out.println(address);
}
catch (UnknownHostException uhEx)
{
System.out.println("Could not find local address!");
}
}
}
-----------------------------------------------------------
SOCKET PROGRAMMING USING UDP

SC:

import java.net.*;
import java.io.*;
class DatagramServer
{
	public static DatagramSocket ds;				
	public static int clientport=789, serverport=790;			

	public static void main(String args[]) throws Exception
	{
		byte buffer[]=new byte[1024];
	
		ds=new DatagramSocket(serverport);			
		BufferedReader breader=new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Server is waiting for input");
		while(true)
		{	String str=breader.readLine();
			if(str==null || str.equals("End"))
				break;
			buffer=str.getBytes();
ds.send(new DatagramPacket(buffer, str.length(), InetAddress.getLocalHost(),clientport));	
		}
	}
}
------
CC:

import java.net.*;
import java.io.*;

class DatagramClient
{
	public static DatagramSocket ds;				
	public static byte buffer[]=new byte[1024];
	public static int clientport=789, serverport=790;			

	public static void main(String args[]) throws Exception
	{
		ds=new DatagramSocket(clientport);
		System.out.println("Client is waiting for servder to send data");
		System.out.println("Press Ctrl+C to come out");
		
		while(true)
		{
			DatagramPacket dp=new DatagramPacket(buffer, buffer.length);	
			ds.receive(dp);						
			String pdata=new String(dp.getData(),0, dp.getLength());			
			System.out.println(pdata);
		}
	}
}
-----------------------------------------------------------------
SOCKET PROGRAMMING USING TCP

SC:
import java.io.*;
import java.net.*;
class tcpserver1
{
 public static void main(String args[])throws IOException
 {
  ServerSocket ss=new ServerSocket(55);
  Socket s=ss.accept();
  DataInputStream in=new DataInputStream(s.getInputStream());
  DataOutputStream out=new DataOutputStream(s.getOutputStream());
  DataInputStream sysin=new DataInputStream(System.in);
  System.out.println("Enter an string:");
  String str=sysin.readLine();
  out.writeBytes(str+"\n");
  System.out.println("The string from TcP server"+in.readLine());
  } 
}
-----
CC:

import java.net.*;
import java.io.*;
public class tCPclient1 
{  
public static void main(String args[])throws IOException
 {   	
 Socket s=new Socket("localhost",55);
 DataInputStream in=new DataInputStream(s.getInputStream());
 DataOutputStream out=new DataOutputStream(s.getOutputStream());
 String str=in.readLine();
 System.out.println("string from TCP server"+str); 
 }
}
-------------------------------------------------------------------
IMPLEMENTATION OF PING

import java.io.*;
import java.net.*;
class pingdemo
{
          public static void  main(String args[])
         {
	BufferedReader in;
	try
	{
		Runtime r=Runtime.getRuntime();
		Process p=r.exec("Ping 127.0.0.1");
		
		if(p==null)
		System.out.println("could not connect");
		in=new BufferedReader(new InputStreamReader(p.getInputStream()));
		String line;
		
		while((line=in.readLine())!=null)
		{
			if(line.startsWith("reply"))
			System.out.println("this is reply");	
			else if(line.startsWith("request"))
			System.out.println("there is no reply");
			else if(line.startsWith("destinator"))
			System.out.println("destinator host unreachabl");
			else
			System.out.println(line);
		}
		System.out.println(in.readLine());
		in.close();
	} catch(IOException e)
	{System.out.println(e.toString());}
         }
}
-------------------------------------------------------------------

IMPLEMENTATION OF ARP

SC:
import java.io.*;
import java.net.*;
class arpserver
{
 public static void main(String args[])throws IOException
 {
  ServerSocket ss=new ServerSocket(55);
  Socket s=ss.accept();
  DataInputStream in=new DataInputStream(s.getInputStream());
  DataOutputStream out=new DataOutputStream(s.getOutputStream());
  DataInputStream sysin=new DataInputStream(System.in);
  System.out.println("Enter an IP Address:");
  String str=sysin.readLine();
  out.writeBytes(str+"\n");
  System.out.println("The corresponding MAC address"+in.readLine());
  }
}
--------
CC:
import java.net.*;
import java.io.*;
public class arpclient
{  public static void main(String args[])throws IOException
 {   	Socket s=new Socket("localhost",55);
  	DataInputStream in=new DataInputStream(s.getInputStream());
 	 DataOutputStream out=new DataOutputStream(s.getOutputStream());
 	 String iparr[]={"10.0.1.45","172.16.5.21","172.16..5.22"};
  	String macarr[]={"00-0c-6e-5c-3c-63","02-11-B6-F3-EF-21","03-12-B3-F3-EF-18"};
  String str=in.readLine();
  	System.out.println("Ip Address received from server"+str);
 	 int flag=0;
 	 for(int i=0;i<5;i++)
  	{
   		if(str.equals(iparr[i])==true)
   		{
    			flag=1;
    			String str1=macarr[i];
    			out.writeBytes(str1+"\n");
    			break;
  		}
}
if(flag==0)
System.out.println("Given IPAddress is not in the network");
s.close();
}
}
--------------------------------------------------------------------------------

IMPLEMENATATION OF RARP

SC:
import java.io.*;
import java.net.*;
class rarps
{
 public static void main(String args[])throws IOException
 {
  ServerSocket ss=new ServerSocket(55);
  Socket s=ss.accept();
  DataInputStream in=new DataInputStream(s.getInputStream());
  DataOutputStream out=new DataOutputStream(s.getOutputStream());
  DataInputStream sysin=new DataInputStream(System.in);
  System.out.println("Enter an mac Address:");
  String str=sysin.readLine();
  out.writeBytes(str+"\n");
  System.out.println("The corresponding MAC address"+in.readLine());
  }
}
------
CC:
import java.net.*;
import java.io.*;
public class rarpc
{
 public static void main(String args[])throws IOException
 {
  Socket s=new Socket("localhost",55);
  DataInputStream in=new DataInputStream(s.getInputStream());
  DataOutputStream out=new DataOutputStream(s.getOutputStream());
  String iparr[]={"10.0.1.45","172.16.5.21","172.16..5.22"};
  String macarr[]={"00-0c-6e-5c-3c-63","02-11-B6-F3-EF-21","03-12-B3-F3-EF-18"};
  String str=in.readLine();
  System.out.println("Ip Address received from server"+str);
  int flag=0;
  for(int i=0;i<5;i++)
  {
   if(str.equals(macarr[i])==true)
   {
    flag=1;
    String str1=iparr[i];
    out.writeBytes(str1+"\n");
    break;
  }
}
if(flag==0)
System.out.println("Given IPAddress is not in the network");
s.close();
}
}
----------------------------------------------------------------------

IMPLEMENTATION OF FTP

SC:
import java.io.*;
import java.net.*;
public class Ftpserver
{
	public static void main(String a[])throws IOException
	{
		ServerSocket ss=new ServerSocket(5555);

		Socket s=ss.accept();
		DataOutputStream dos=new DataOutputStream(s.getOutputStream());
		DataInputStream din=new DataInputStream(s.getInputStream());		
		String s1;
		s1=din.readLine();		
		FileInputStream fin=new FileInputStream(s1);
		int str1;
		while((str1=fin.read())!=-1)
			dos.writeBytes(""+(char)str1);
		System.out.println("\n file successfully sent");
		dos.close();
		din.close();
		s.close();
	}
}
-------
CC:

import java.io.*;
import java.net.*;
public class Ftpclient
{
	public static void main(String a[])throws IOException
	{
		Socket s=new Socket(InetAddress.getLocalHost(),5555);
		DataInputStream s1=new DataInputStream(s.getInputStream());
		DataInputStream inp=new DataInputStream(System.in);
		DataOutputStream so=new DataOutputStream(s.getOutputStream());
		System.out.println("\n enter the filename(path)");
		String str=inp.readLine();
		so.writeBytes(str);
		so.writeBytes("\n");
		FileOutputStream fos=new FileOutputStream("output.txt");
		int str1;
		while((str1=s1.read())!=-1)
			fos.write((char)str1);
		System.out.println("\n file received successfully");
		s1.close();
		so.close();
		inp.close();
		s.close();
	}
}
-----------------------------------------------------------------
